#  build.ninja | building pdb on the macintosh computer.

optflags = -g
progname = pdb
sha1git = `git log -1 '--pretty=format:%h'`
objs = ./.objs/7703a322-55A9-44ca-b218-eabcf7f87663_$progname
platflags = -Wno-nullability-completeness
moduleflags = -fmodules-ts -fimplicit-modules -fmodule-map-file=module.modulemap
flags = $optflags $platflags $moduleflags

rule c
  command = xcrun clang -DSHA1GIT=\"$sha1git\" -MD -MF $out.d $flags        $
   -std=c2x -c $in -o $out
  depfile = $out.d
  deps = gcc

rule cc
  command = xcrun clang -DSHA1GIT=\"$sha1git\" -MD -MF $out.d $flags        $
   -std=c++20 -c $in -o $out
  depfile = $out.d
  deps = gcc

rule link
  command = xcrun ld -macosx_version_min 12.0 -lSystem -lc++                $
  -L /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/           $
  -o $out $in

build pdb: link $objs/main.o $objs/regs-mz.o $objs/regs-mm.o                $
 $objs/print-present.o $objs/output-present.o $objs/rt-pdb.o                $
 $objs/except-syntax.o
build $objs/regs-mz.o: c regs-mz.c
build $objs/regs-mm.o: c regs-mm.c
build $objs/main.o: cc main.cpp
build $objs/output-present.o: c present-out.c
build $objs/print-present.o: c present-print.c
build $objs/except-syntax.o: cc except-syntax.cpp
build $objs/rt-pdb.o: c rt-pdb.c
default $progname
